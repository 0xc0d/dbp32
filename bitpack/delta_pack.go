package bitpack

import "errors"

func DeltaPack(offset uint32, in []uint32, out []uint32, bit int) error {
	switch bit {
	case 0:
		deltaPack0(offset, in, out)

	case 1:
		deltaPack1(offset, in, out)

	case 2:
		deltaPack2(offset, in, out)

	case 3:
		deltaPack3(offset, in, out)

	case 4:
		deltaPack4(offset, in, out)

	case 5:
		deltaPack5(offset, in, out)

	case 6:
		deltaPack6(offset, in, out)

	case 7:
		deltaPack7(offset, in, out)

	case 8:
		deltaPack8(offset, in, out)

	case 9:
		deltaPack9(offset, in, out)

	case 10:
		deltaPack10(offset, in, out)

	case 11:
		deltaPack11(offset, in, out)

	case 12:
		deltaPack12(offset, in, out)

	case 13:
		deltaPack13(offset, in, out)

	case 14:
		deltaPack14(offset, in, out)

	case 15:
		deltaPack15(offset, in, out)

	case 16:
		deltaPack16(offset, in, out)

	case 17:
		deltaPack17(offset, in, out)

	case 18:
		deltaPack18(offset, in, out)

	case 19:
		deltaPack19(offset, in, out)

	case 20:
		deltaPack20(offset, in, out)

	case 21:
		deltaPack21(offset, in, out)

	case 22:
		deltaPack22(offset, in, out)

	case 23:
		deltaPack23(offset, in, out)

	case 24:
		deltaPack24(offset, in, out)

	case 25:
		deltaPack25(offset, in, out)

	case 26:
		deltaPack26(offset, in, out)

	case 27:
		deltaPack27(offset, in, out)

	case 28:
		deltaPack28(offset, in, out)

	case 29:
		deltaPack29(offset, in, out)

	case 30:
		deltaPack30(offset, in, out)

	case 31:
		deltaPack31(offset, in, out)

	case 32:
		if len(out) < 32 {
			return errors.New("length out is less than 32")
		}

		if len(in) < 32 {
			return errors.New("length in is less than 32")
		}

		deltaPack32(offset, in, out)

	default:
		return errors.New("unsupported bit width")
	}

	return nil
}

func deltaPack0(_ uint32, _ []uint32, _ []uint32) {}

func deltaPack1(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 1) |
		((in[2] - in[1]) << 2) |
		((in[3] - in[2]) << 3) |
		((in[4] - in[3]) << 4) |
		((in[5] - in[4]) << 5) |
		((in[6] - in[5]) << 6) |
		((in[7] - in[6]) << 7) |
		((in[8] - in[7]) << 8) |
		((in[9] - in[8]) << 9) |
		((in[10] - in[9]) << 10) |
		((in[11] - in[10]) << 11) |
		((in[12] - in[11]) << 12) |
		((in[13] - in[12]) << 13) |
		((in[14] - in[13]) << 14) |
		((in[15] - in[14]) << 15) |
		((in[16] - in[15]) << 16) |
		((in[17] - in[16]) << 17) |
		((in[18] - in[17]) << 18) |
		((in[19] - in[18]) << 19) |
		((in[20] - in[19]) << 20) |
		((in[21] - in[20]) << 21) |
		((in[22] - in[21]) << 22) |
		((in[23] - in[22]) << 23) |
		((in[24] - in[23]) << 24) |
		((in[25] - in[24]) << 25) |
		((in[26] - in[25]) << 26) |
		((in[27] - in[26]) << 27) |
		((in[28] - in[27]) << 28) |
		((in[29] - in[28]) << 29) |
		((in[30] - in[29]) << 30) |
		((in[31] - in[30]) << 31)
}

func deltaPack2(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 2) |
		((in[2] - in[1]) << 4) |
		((in[3] - in[2]) << 6) |
		((in[4] - in[3]) << 8) |
		((in[5] - in[4]) << 10) |
		((in[6] - in[5]) << 12) |
		((in[7] - in[6]) << 14) |
		((in[8] - in[7]) << 16) |
		((in[9] - in[8]) << 18) |
		((in[10] - in[9]) << 20) |
		((in[11] - in[10]) << 22) |
		((in[12] - in[11]) << 24) |
		((in[13] - in[12]) << 26) |
		((in[14] - in[13]) << 28) |
		((in[15] - in[14]) << 30)

	out[1] = (in[16] - in[15]) |
		((in[17] - in[16]) << 2) |
		((in[18] - in[17]) << 4) |
		((in[19] - in[18]) << 6) |
		((in[20] - in[19]) << 8) |
		((in[21] - in[20]) << 10) |
		((in[22] - in[21]) << 12) |
		((in[23] - in[22]) << 14) |
		((in[24] - in[23]) << 16) |
		((in[25] - in[24]) << 18) |
		((in[26] - in[25]) << 20) |
		((in[27] - in[26]) << 22) |
		((in[28] - in[27]) << 24) |
		((in[29] - in[28]) << 26) |
		((in[30] - in[29]) << 28) |
		((in[31] - in[30]) << 30)
}

func deltaPack3(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 3) |
		((in[2] - in[1]) << 6) |
		((in[3] - in[2]) << 9) |
		((in[4] - in[3]) << 12) |
		((in[5] - in[4]) << 15) |
		((in[6] - in[5]) << 18) |
		((in[7] - in[6]) << 21) |
		((in[8] - in[7]) << 24) |
		((in[9] - in[8]) << 27) |
		((in[10] - in[9]) << 30)

	out[1] = ((in[10] - in[9]) >> (3 - 1)) |
		((in[11] - in[10]) << 1) |
		((in[12] - in[11]) << 4) |
		((in[13] - in[12]) << 7) |
		((in[14] - in[13]) << 10) |
		((in[15] - in[14]) << 13) |
		((in[16] - in[15]) << 16) |
		((in[17] - in[16]) << 19) |
		((in[18] - in[17]) << 22) |
		((in[19] - in[18]) << 25) |
		((in[20] - in[19]) << 28) |
		((in[21] - in[20]) << 31)

	out[2] = ((in[21] - in[20]) >> (3 - 2)) |
		((in[22] - in[21]) << 2) |
		((in[23] - in[22]) << 5) |
		((in[24] - in[23]) << 8) |
		((in[25] - in[24]) << 11) |
		((in[26] - in[25]) << 14) |
		((in[27] - in[26]) << 17) |
		((in[28] - in[27]) << 20) |
		((in[29] - in[28]) << 23) |
		((in[30] - in[29]) << 26) |
		((in[31] - in[30]) << 29)
}

func deltaPack4(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 4) |
		((in[2] - in[1]) << 8) |
		((in[3] - in[2]) << 12) |
		((in[4] - in[3]) << 16) |
		((in[5] - in[4]) << 20) |
		((in[6] - in[5]) << 24) |
		((in[7] - in[6]) << 28)

	out[1] = (in[8] - in[7]) |
		((in[9] - in[8]) << 4) |
		((in[10] - in[9]) << 8) |
		((in[11] - in[10]) << 12) |
		((in[12] - in[11]) << 16) |
		((in[13] - in[12]) << 20) |
		((in[14] - in[13]) << 24) |
		((in[15] - in[14]) << 28)

	out[2] = (in[16] - in[15]) |
		((in[17] - in[16]) << 4) |
		((in[18] - in[17]) << 8) |
		((in[19] - in[18]) << 12) |
		((in[20] - in[19]) << 16) |
		((in[21] - in[20]) << 20) |
		((in[22] - in[21]) << 24) |
		((in[23] - in[22]) << 28)

	out[3] = (in[24] - in[23]) |
		((in[25] - in[24]) << 4) |
		((in[26] - in[25]) << 8) |
		((in[27] - in[26]) << 12) |
		((in[28] - in[27]) << 16) |
		((in[29] - in[28]) << 20) |
		((in[30] - in[29]) << 24) |
		((in[31] - in[30]) << 28)
}

func deltaPack5(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 5) |
		((in[2] - in[1]) << 10) |
		((in[3] - in[2]) << 15) |
		((in[4] - in[3]) << 20) |
		((in[5] - in[4]) << 25) |
		((in[6] - in[5]) << 30)

	out[1] = ((in[6] - in[5]) >> (5 - 3)) |
		((in[7] - in[6]) << 3) |
		((in[8] - in[7]) << 8) |
		((in[9] - in[8]) << 13) |
		((in[10] - in[9]) << 18) |
		((in[11] - in[10]) << 23) |
		((in[12] - in[11]) << 28)

	out[2] = ((in[12] - in[11]) >> (5 - 1)) |
		((in[13] - in[12]) << 1) |
		((in[14] - in[13]) << 6) |
		((in[15] - in[14]) << 11) |
		((in[16] - in[15]) << 16) |
		((in[17] - in[16]) << 21) |
		((in[18] - in[17]) << 26) |
		((in[19] - in[18]) << 31)

	out[3] = ((in[19] - in[18]) >> (5 - 4)) |
		((in[20] - in[19]) << 4) |
		((in[21] - in[20]) << 9) |
		((in[22] - in[21]) << 14) |
		((in[23] - in[22]) << 19) |
		((in[24] - in[23]) << 24) |
		((in[25] - in[24]) << 29)

	out[4] = ((in[25] - in[24]) >> (5 - 2)) |
		((in[26] - in[25]) << 2) |
		((in[27] - in[26]) << 7) |
		((in[28] - in[27]) << 12) |
		((in[29] - in[28]) << 17) |
		((in[30] - in[29]) << 22) |
		((in[31] - in[30]) << 27)
}

func deltaPack6(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 6) |
		((in[2] - in[1]) << 12) |
		((in[3] - in[2]) << 18) |
		((in[4] - in[3]) << 24) |
		((in[5] - in[4]) << 30)

	out[1] = ((in[5] - in[4]) >> (6 - 4)) |
		((in[6] - in[5]) << 4) |
		((in[7] - in[6]) << 10) |
		((in[8] - in[7]) << 16) |
		((in[9] - in[8]) << 22) |
		((in[10] - in[9]) << 28)

	out[2] = ((in[10] - in[9]) >> (6 - 2)) |
		((in[11] - in[10]) << 2) |
		((in[12] - in[11]) << 8) |
		((in[13] - in[12]) << 14) |
		((in[14] - in[13]) << 20) |
		((in[15] - in[14]) << 26)

	out[3] = (in[16] - in[15]) |
		((in[17] - in[16]) << 6) |
		((in[18] - in[17]) << 12) |
		((in[19] - in[18]) << 18) |
		((in[20] - in[19]) << 24) |
		((in[21] - in[20]) << 30)

	out[4] = ((in[21] - in[20]) >> (6 - 4)) |
		((in[22] - in[21]) << 4) |
		((in[23] - in[22]) << 10) |
		((in[24] - in[23]) << 16) |
		((in[25] - in[24]) << 22) |
		((in[26] - in[25]) << 28)

	out[5] = ((in[26] - in[25]) >> (6 - 2)) |
		((in[27] - in[26]) << 2) |
		((in[28] - in[27]) << 8) |
		((in[29] - in[28]) << 14) |
		((in[30] - in[29]) << 20) |
		((in[31] - in[30]) << 26)
}

func deltaPack7(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 7) |
		((in[2] - in[1]) << 14) |
		((in[3] - in[2]) << 21) |
		((in[4] - in[3]) << 28)

	out[1] = ((in[4] - in[3]) >> (7 - 3)) |
		((in[5] - in[4]) << 3) |
		((in[6] - in[5]) << 10) |
		((in[7] - in[6]) << 17) |
		((in[8] - in[7]) << 24) |
		((in[9] - in[8]) << 31)

	out[2] = ((in[9] - in[8]) >> (7 - 6)) |
		((in[10] - in[9]) << 6) |
		((in[11] - in[10]) << 13) |
		((in[12] - in[11]) << 20) |
		((in[13] - in[12]) << 27)

	out[3] = ((in[13] - in[12]) >> (7 - 2)) |
		((in[14] - in[13]) << 2) |
		((in[15] - in[14]) << 9) |
		((in[16] - in[15]) << 16) |
		((in[17] - in[16]) << 23) |
		((in[18] - in[17]) << 30)

	out[4] = ((in[18] - in[17]) >> (7 - 5)) |
		((in[19] - in[18]) << 5) |
		((in[20] - in[19]) << 12) |
		((in[21] - in[20]) << 19) |
		((in[22] - in[21]) << 26)

	out[5] = ((in[22] - in[21]) >> (7 - 1)) |
		((in[23] - in[22]) << 1) |
		((in[24] - in[23]) << 8) |
		((in[25] - in[24]) << 15) |
		((in[26] - in[25]) << 22) |
		((in[27] - in[26]) << 29)

	out[6] = ((in[27] - in[26]) >> (7 - 4)) |
		((in[28] - in[27]) << 4) |
		((in[29] - in[28]) << 11) |
		((in[30] - in[29]) << 18) |
		((in[31] - in[30]) << 25)
}

func deltaPack8(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 8) |
		((in[2] - in[1]) << 16) |
		((in[3] - in[2]) << 24)

	out[1] = (in[4] - in[3]) |
		((in[5] - in[4]) << 8) |
		((in[6] - in[5]) << 16) |
		((in[7] - in[6]) << 24)

	out[2] = (in[8] - in[7]) |
		((in[9] - in[8]) << 8) |
		((in[10] - in[9]) << 16) |
		((in[11] - in[10]) << 24)

	out[3] = (in[12] - in[11]) |
		((in[13] - in[12]) << 8) |
		((in[14] - in[13]) << 16) |
		((in[15] - in[14]) << 24)

	out[4] = (in[16] - in[15]) |
		((in[17] - in[16]) << 8) |
		((in[18] - in[17]) << 16) |
		((in[19] - in[18]) << 24)

	out[5] = (in[20] - in[19]) |
		((in[21] - in[20]) << 8) |
		((in[22] - in[21]) << 16) |
		((in[23] - in[22]) << 24)

	out[6] = (in[24] - in[23]) |
		((in[25] - in[24]) << 8) |
		((in[26] - in[25]) << 16) |
		((in[27] - in[26]) << 24)

	out[7] = (in[28] - in[27]) |
		((in[29] - in[28]) << 8) |
		((in[30] - in[29]) << 16) |
		((in[31] - in[30]) << 24)
}

func deltaPack9(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 9) |
		((in[2] - in[1]) << 18) |
		((in[3] - in[2]) << 27)

	out[1] = ((in[3] - in[2]) >> (9 - 4)) |
		((in[4] - in[3]) << 4) |
		((in[5] - in[4]) << 13) |
		((in[6] - in[5]) << 22) |
		((in[7] - in[6]) << 31)

	out[2] = ((in[7] - in[6]) >> (9 - 8)) |
		((in[8] - in[7]) << 8) |
		((in[9] - in[8]) << 17) |
		((in[10] - in[9]) << 26)

	out[3] = ((in[10] - in[9]) >> (9 - 3)) |
		((in[11] - in[10]) << 3) |
		((in[12] - in[11]) << 12) |
		((in[13] - in[12]) << 21) |
		((in[14] - in[13]) << 30)

	out[4] = ((in[14] - in[13]) >> (9 - 7)) |
		((in[15] - in[14]) << 7) |
		((in[16] - in[15]) << 16) |
		((in[17] - in[16]) << 25)

	out[5] = ((in[17] - in[16]) >> (9 - 2)) |
		((in[18] - in[17]) << 2) |
		((in[19] - in[18]) << 11) |
		((in[20] - in[19]) << 20) |
		((in[21] - in[20]) << 29)

	out[6] = ((in[21] - in[20]) >> (9 - 6)) |
		((in[22] - in[21]) << 6) |
		((in[23] - in[22]) << 15) |
		((in[24] - in[23]) << 24)

	out[7] = ((in[24] - in[23]) >> (9 - 1)) |
		((in[25] - in[24]) << 1) |
		((in[26] - in[25]) << 10) |
		((in[27] - in[26]) << 19) |
		((in[28] - in[27]) << 28)

	out[8] = ((in[28] - in[27]) >> (9 - 5)) |
		((in[29] - in[28]) << 5) |
		((in[30] - in[29]) << 14) |
		((in[31] - in[30]) << 23)
}

func deltaPack10(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 10) |
		((in[2] - in[1]) << 20) |
		((in[3] - in[2]) << 30)

	out[1] = ((in[3] - in[2]) >> (10 - 8)) |
		((in[4] - in[3]) << 8) |
		((in[5] - in[4]) << 18) |
		((in[6] - in[5]) << 28)

	out[2] = ((in[6] - in[5]) >> (10 - 6)) |
		((in[7] - in[6]) << 6) |
		((in[8] - in[7]) << 16) |
		((in[9] - in[8]) << 26)

	out[3] = ((in[9] - in[8]) >> (10 - 4)) |
		((in[10] - in[9]) << 4) |
		((in[11] - in[10]) << 14) |
		((in[12] - in[11]) << 24)

	out[4] = ((in[12] - in[11]) >> (10 - 2)) |
		((in[13] - in[12]) << 2) |
		((in[14] - in[13]) << 12) |
		((in[15] - in[14]) << 22)

	out[5] = (in[16] - in[15]) |
		((in[17] - in[16]) << 10) |
		((in[18] - in[17]) << 20) |
		((in[19] - in[18]) << 30)

	out[6] = ((in[19] - in[18]) >> (10 - 8)) |
		((in[20] - in[19]) << 8) |
		((in[21] - in[20]) << 18) |
		((in[22] - in[21]) << 28)

	out[7] = ((in[22] - in[21]) >> (10 - 6)) |
		((in[23] - in[22]) << 6) |
		((in[24] - in[23]) << 16) |
		((in[25] - in[24]) << 26)

	out[8] = ((in[25] - in[24]) >> (10 - 4)) |
		((in[26] - in[25]) << 4) |
		((in[27] - in[26]) << 14) |
		((in[28] - in[27]) << 24)

	out[9] = ((in[28] - in[27]) >> (10 - 2)) |
		((in[29] - in[28]) << 2) |
		((in[30] - in[29]) << 12) |
		((in[31] - in[30]) << 22)
}

func deltaPack11(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 11) |
		((in[2] - in[1]) << 22)

	out[1] = ((in[2] - in[1]) >> (11 - 1)) |
		((in[3] - in[2]) << 1) |
		((in[4] - in[3]) << 12) |
		((in[5] - in[4]) << 23)

	out[2] = ((in[5] - in[4]) >> (11 - 2)) |
		((in[6] - in[5]) << 2) |
		((in[7] - in[6]) << 13) |
		((in[8] - in[7]) << 24)

	out[3] = ((in[8] - in[7]) >> (11 - 3)) |
		((in[9] - in[8]) << 3) |
		((in[10] - in[9]) << 14) |
		((in[11] - in[10]) << 25)

	out[4] = ((in[11] - in[10]) >> (11 - 4)) |
		((in[12] - in[11]) << 4) |
		((in[13] - in[12]) << 15) |
		((in[14] - in[13]) << 26)

	out[5] = ((in[14] - in[13]) >> (11 - 5)) |
		((in[15] - in[14]) << 5) |
		((in[16] - in[15]) << 16) |
		((in[17] - in[16]) << 27)

	out[6] = ((in[17] - in[16]) >> (11 - 6)) |
		((in[18] - in[17]) << 6) |
		((in[19] - in[18]) << 17) |
		((in[20] - in[19]) << 28)

	out[7] = ((in[20] - in[19]) >> (11 - 7)) |
		((in[21] - in[20]) << 7) |
		((in[22] - in[21]) << 18) |
		((in[23] - in[22]) << 29)

	out[8] = ((in[23] - in[22]) >> (11 - 8)) |
		((in[24] - in[23]) << 8) |
		((in[25] - in[24]) << 19) |
		((in[26] - in[25]) << 30)

	out[9] = ((in[26] - in[25]) >> (11 - 9)) |
		((in[27] - in[26]) << 9) |
		((in[28] - in[27]) << 20) |
		((in[29] - in[28]) << 31)

	out[10] = ((in[29] - in[28]) >> (11 - 10)) |
		((in[30] - in[29]) << 10) |
		((in[31] - in[30]) << 21)
}

func deltaPack12(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 12) |
		((in[2] - in[1]) << 24)

	out[1] = ((in[2] - in[1]) >> (12 - 4)) |
		((in[3] - in[2]) << 4) |
		((in[4] - in[3]) << 16) |
		((in[5] - in[4]) << 28)

	out[2] = ((in[5] - in[4]) >> (12 - 8)) |
		((in[6] - in[5]) << 8) |
		((in[7] - in[6]) << 20)

	out[3] = (in[8] - in[7]) |
		((in[9] - in[8]) << 12) |
		((in[10] - in[9]) << 24)

	out[4] = ((in[10] - in[9]) >> (12 - 4)) |
		((in[11] - in[10]) << 4) |
		((in[12] - in[11]) << 16) |
		((in[13] - in[12]) << 28)

	out[5] = ((in[13] - in[12]) >> (12 - 8)) |
		((in[14] - in[13]) << 8) |
		((in[15] - in[14]) << 20)

	out[6] = (in[16] - in[15]) |
		((in[17] - in[16]) << 12) |
		((in[18] - in[17]) << 24)

	out[7] = ((in[18] - in[17]) >> (12 - 4)) |
		((in[19] - in[18]) << 4) |
		((in[20] - in[19]) << 16) |
		((in[21] - in[20]) << 28)

	out[8] = ((in[21] - in[20]) >> (12 - 8)) |
		((in[22] - in[21]) << 8) |
		((in[23] - in[22]) << 20)

	out[9] = (in[24] - in[23]) |
		((in[25] - in[24]) << 12) |
		((in[26] - in[25]) << 24)

	out[10] = ((in[26] - in[25]) >> (12 - 4)) |
		((in[27] - in[26]) << 4) |
		((in[28] - in[27]) << 16) |
		((in[29] - in[28]) << 28)

	out[11] = ((in[29] - in[28]) >> (12 - 8)) |
		((in[30] - in[29]) << 8) |
		((in[31] - in[30]) << 20)
}

func deltaPack13(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 13) |
		((in[2] - in[1]) << 26)

	out[1] = ((in[2] - in[1]) >> (13 - 7)) |
		((in[3] - in[2]) << 7) |
		((in[4] - in[3]) << 20)

	out[2] = ((in[4] - in[3]) >> (13 - 1)) |
		((in[5] - in[4]) << 1) |
		((in[6] - in[5]) << 14) |
		((in[7] - in[6]) << 27)

	out[3] = ((in[7] - in[6]) >> (13 - 8)) |
		((in[8] - in[7]) << 8) |
		((in[9] - in[8]) << 21)

	out[4] = ((in[9] - in[8]) >> (13 - 2)) |
		((in[10] - in[9]) << 2) |
		((in[11] - in[10]) << 15) |
		((in[12] - in[11]) << 28)

	out[5] = ((in[12] - in[11]) >> (13 - 9)) |
		((in[13] - in[12]) << 9) |
		((in[14] - in[13]) << 22)

	out[6] = ((in[14] - in[13]) >> (13 - 3)) |
		((in[15] - in[14]) << 3) |
		((in[16] - in[15]) << 16) |
		((in[17] - in[16]) << 29)

	out[7] = ((in[17] - in[16]) >> (13 - 10)) |
		((in[18] - in[17]) << 10) |
		((in[19] - in[18]) << 23)

	out[8] = ((in[19] - in[18]) >> (13 - 4)) |
		((in[20] - in[19]) << 4) |
		((in[21] - in[20]) << 17) |
		((in[22] - in[21]) << 30)

	out[9] = ((in[22] - in[21]) >> (13 - 11)) |
		((in[23] - in[22]) << 11) |
		((in[24] - in[23]) << 24)

	out[10] = ((in[24] - in[23]) >> (13 - 5)) |
		((in[25] - in[24]) << 5) |
		((in[26] - in[25]) << 18) |
		((in[27] - in[26]) << 31)

	out[11] = ((in[27] - in[26]) >> (13 - 12)) |
		((in[28] - in[27]) << 12) |
		((in[29] - in[28]) << 25)

	out[12] = ((in[29] - in[28]) >> (13 - 6)) |
		((in[30] - in[29]) << 6) |
		((in[31] - in[30]) << 19)
}

func deltaPack14(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 14) |
		((in[2] - in[1]) << 28)

	out[1] = ((in[2] - in[1]) >> (14 - 10)) |
		((in[3] - in[2]) << 10) |
		((in[4] - in[3]) << 24)

	out[2] = ((in[4] - in[3]) >> (14 - 6)) |
		((in[5] - in[4]) << 6) |
		((in[6] - in[5]) << 20)

	out[3] = ((in[6] - in[5]) >> (14 - 2)) |
		((in[7] - in[6]) << 2) |
		((in[8] - in[7]) << 16) |
		((in[9] - in[8]) << 30)

	out[4] = ((in[9] - in[8]) >> (14 - 12)) |
		((in[10] - in[9]) << 12) |
		((in[11] - in[10]) << 26)

	out[5] = ((in[11] - in[10]) >> (14 - 8)) |
		((in[12] - in[11]) << 8) |
		((in[13] - in[12]) << 22)

	out[6] = ((in[13] - in[12]) >> (14 - 4)) |
		((in[14] - in[13]) << 4) |
		((in[15] - in[14]) << 18)

	out[7] = (in[16] - in[15]) |
		((in[17] - in[16]) << 14) |
		((in[18] - in[17]) << 28)

	out[8] = ((in[18] - in[17]) >> (14 - 10)) |
		((in[19] - in[18]) << 10) |
		((in[20] - in[19]) << 24)

	out[9] = ((in[20] - in[19]) >> (14 - 6)) |
		((in[21] - in[20]) << 6) |
		((in[22] - in[21]) << 20)

	out[10] = ((in[22] - in[21]) >> (14 - 2)) |
		((in[23] - in[22]) << 2) |
		((in[24] - in[23]) << 16) |
		((in[25] - in[24]) << 30)

	out[11] = ((in[25] - in[24]) >> (14 - 12)) |
		((in[26] - in[25]) << 12) |
		((in[27] - in[26]) << 26)

	out[12] = ((in[27] - in[26]) >> (14 - 8)) |
		((in[28] - in[27]) << 8) |
		((in[29] - in[28]) << 22)

	out[13] = ((in[29] - in[28]) >> (14 - 4)) |
		((in[30] - in[29]) << 4) |
		((in[31] - in[30]) << 18)
}

func deltaPack15(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 15) |
		((in[2] - in[1]) << 30)

	out[1] = ((in[2] - in[1]) >> (15 - 13)) |
		((in[3] - in[2]) << 13) |
		((in[4] - in[3]) << 28)

	out[2] = ((in[4] - in[3]) >> (15 - 11)) |
		((in[5] - in[4]) << 11) |
		((in[6] - in[5]) << 26)

	out[3] = ((in[6] - in[5]) >> (15 - 9)) |
		((in[7] - in[6]) << 9) |
		((in[8] - in[7]) << 24)

	out[4] = ((in[8] - in[7]) >> (15 - 7)) |
		((in[9] - in[8]) << 7) |
		((in[10] - in[9]) << 22)

	out[5] = ((in[10] - in[9]) >> (15 - 5)) |
		((in[11] - in[10]) << 5) |
		((in[12] - in[11]) << 20)

	out[6] = ((in[12] - in[11]) >> (15 - 3)) |
		((in[13] - in[12]) << 3) |
		((in[14] - in[13]) << 18)

	out[7] = ((in[14] - in[13]) >> (15 - 1)) |
		((in[15] - in[14]) << 1) |
		((in[16] - in[15]) << 16) |
		((in[17] - in[16]) << 31)

	out[8] = ((in[17] - in[16]) >> (15 - 14)) |
		((in[18] - in[17]) << 14) |
		((in[19] - in[18]) << 29)

	out[9] = ((in[19] - in[18]) >> (15 - 12)) |
		((in[20] - in[19]) << 12) |
		((in[21] - in[20]) << 27)

	out[10] = ((in[21] - in[20]) >> (15 - 10)) |
		((in[22] - in[21]) << 10) |
		((in[23] - in[22]) << 25)

	out[11] = ((in[23] - in[22]) >> (15 - 8)) |
		((in[24] - in[23]) << 8) |
		((in[25] - in[24]) << 23)

	out[12] = ((in[25] - in[24]) >> (15 - 6)) |
		((in[26] - in[25]) << 6) |
		((in[27] - in[26]) << 21)

	out[13] = ((in[27] - in[26]) >> (15 - 4)) |
		((in[28] - in[27]) << 4) |
		((in[29] - in[28]) << 19)

	out[14] = ((in[29] - in[28]) >> (15 - 2)) |
		((in[30] - in[29]) << 2) |
		((in[31] - in[30]) << 17)
}

func deltaPack16(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 16)

	out[1] = (in[2] - in[1]) |
		((in[3] - in[2]) << 16)

	out[2] = (in[4] - in[3]) |
		((in[5] - in[4]) << 16)

	out[3] = (in[6] - in[5]) |
		((in[7] - in[6]) << 16)

	out[4] = (in[8] - in[7]) |
		((in[9] - in[8]) << 16)

	out[5] = (in[10] - in[9]) |
		((in[11] - in[10]) << 16)

	out[6] = (in[12] - in[11]) |
		((in[13] - in[12]) << 16)

	out[7] = (in[14] - in[13]) |
		((in[15] - in[14]) << 16)

	out[8] = (in[16] - in[15]) |
		((in[17] - in[16]) << 16)

	out[9] = (in[18] - in[17]) |
		((in[19] - in[18]) << 16)

	out[10] = (in[20] - in[19]) |
		((in[21] - in[20]) << 16)

	out[11] = (in[22] - in[21]) |
		((in[23] - in[22]) << 16)

	out[12] = (in[24] - in[23]) |
		((in[25] - in[24]) << 16)

	out[13] = (in[26] - in[25]) |
		((in[27] - in[26]) << 16)

	out[14] = (in[28] - in[27]) |
		((in[29] - in[28]) << 16)

	out[15] = (in[30] - in[29]) |
		((in[31] - in[30]) << 16)
}

func deltaPack17(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 17)

	out[1] = ((in[1] - in[0]) >> (17 - 2)) |
		((in[2] - in[1]) << 2) |
		((in[3] - in[2]) << 19)

	out[2] = ((in[3] - in[2]) >> (17 - 4)) |
		((in[4] - in[3]) << 4) |
		((in[5] - in[4]) << 21)

	out[3] = ((in[5] - in[4]) >> (17 - 6)) |
		((in[6] - in[5]) << 6) |
		((in[7] - in[6]) << 23)

	out[4] = ((in[7] - in[6]) >> (17 - 8)) |
		((in[8] - in[7]) << 8) |
		((in[9] - in[8]) << 25)

	out[5] = ((in[9] - in[8]) >> (17 - 10)) |
		((in[10] - in[9]) << 10) |
		((in[11] - in[10]) << 27)

	out[6] = ((in[11] - in[10]) >> (17 - 12)) |
		((in[12] - in[11]) << 12) |
		((in[13] - in[12]) << 29)

	out[7] = ((in[13] - in[12]) >> (17 - 14)) |
		((in[14] - in[13]) << 14) |
		((in[15] - in[14]) << 31)

	out[8] = ((in[15] - in[14]) >> (17 - 16)) |
		((in[16] - in[15]) << 16)

	out[9] = ((in[16] - in[15]) >> (17 - 1)) |
		((in[17] - in[16]) << 1) |
		((in[18] - in[17]) << 18)

	out[10] = ((in[18] - in[17]) >> (17 - 3)) |
		((in[19] - in[18]) << 3) |
		((in[20] - in[19]) << 20)

	out[11] = ((in[20] - in[19]) >> (17 - 5)) |
		((in[21] - in[20]) << 5) |
		((in[22] - in[21]) << 22)

	out[12] = ((in[22] - in[21]) >> (17 - 7)) |
		((in[23] - in[22]) << 7) |
		((in[24] - in[23]) << 24)

	out[13] = ((in[24] - in[23]) >> (17 - 9)) |
		((in[25] - in[24]) << 9) |
		((in[26] - in[25]) << 26)

	out[14] = ((in[26] - in[25]) >> (17 - 11)) |
		((in[27] - in[26]) << 11) |
		((in[28] - in[27]) << 28)

	out[15] = ((in[28] - in[27]) >> (17 - 13)) |
		((in[29] - in[28]) << 13) |
		((in[30] - in[29]) << 30)

	out[16] = ((in[30] - in[29]) >> (17 - 15)) |
		((in[31] - in[30]) << 15)
}

func deltaPack18(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 18)

	out[1] = ((in[1] - in[0]) >> (18 - 4)) |
		((in[2] - in[1]) << 4) |
		((in[3] - in[2]) << 22)

	out[2] = ((in[3] - in[2]) >> (18 - 8)) |
		((in[4] - in[3]) << 8) |
		((in[5] - in[4]) << 26)

	out[3] = ((in[5] - in[4]) >> (18 - 12)) |
		((in[6] - in[5]) << 12) |
		((in[7] - in[6]) << 30)

	out[4] = ((in[7] - in[6]) >> (18 - 16)) |
		((in[8] - in[7]) << 16)

	out[5] = ((in[8] - in[7]) >> (18 - 2)) |
		((in[9] - in[8]) << 2) |
		((in[10] - in[9]) << 20)

	out[6] = ((in[10] - in[9]) >> (18 - 6)) |
		((in[11] - in[10]) << 6) |
		((in[12] - in[11]) << 24)

	out[7] = ((in[12] - in[11]) >> (18 - 10)) |
		((in[13] - in[12]) << 10) |
		((in[14] - in[13]) << 28)

	out[8] = ((in[14] - in[13]) >> (18 - 14)) |
		((in[15] - in[14]) << 14)

	out[9] = (in[16] - in[15]) |
		((in[17] - in[16]) << 18)

	out[10] = ((in[17] - in[16]) >> (18 - 4)) |
		((in[18] - in[17]) << 4) |
		((in[19] - in[18]) << 22)

	out[11] = ((in[19] - in[18]) >> (18 - 8)) |
		((in[20] - in[19]) << 8) |
		((in[21] - in[20]) << 26)

	out[12] = ((in[21] - in[20]) >> (18 - 12)) |
		((in[22] - in[21]) << 12) |
		((in[23] - in[22]) << 30)

	out[13] = ((in[23] - in[22]) >> (18 - 16)) |
		((in[24] - in[23]) << 16)

	out[14] = ((in[24] - in[23]) >> (18 - 2)) |
		((in[25] - in[24]) << 2) |
		((in[26] - in[25]) << 20)

	out[15] = ((in[26] - in[25]) >> (18 - 6)) |
		((in[27] - in[26]) << 6) |
		((in[28] - in[27]) << 24)

	out[16] = ((in[28] - in[27]) >> (18 - 10)) |
		((in[29] - in[28]) << 10) |
		((in[30] - in[29]) << 28)

	out[17] = ((in[30] - in[29]) >> (18 - 14)) |
		((in[31] - in[30]) << 14)
}

func deltaPack19(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 19)

	out[1] = ((in[1] - in[0]) >> (19 - 6)) |
		((in[2] - in[1]) << 6) |
		((in[3] - in[2]) << 25)

	out[2] = ((in[3] - in[2]) >> (19 - 12)) |
		((in[4] - in[3]) << 12) |
		((in[5] - in[4]) << 31)

	out[3] = ((in[5] - in[4]) >> (19 - 18)) |
		((in[6] - in[5]) << 18)

	out[4] = ((in[6] - in[5]) >> (19 - 5)) |
		((in[7] - in[6]) << 5) |
		((in[8] - in[7]) << 24)

	out[5] = ((in[8] - in[7]) >> (19 - 11)) |
		((in[9] - in[8]) << 11) |
		((in[10] - in[9]) << 30)

	out[6] = ((in[10] - in[9]) >> (19 - 17)) |
		((in[11] - in[10]) << 17)

	out[7] = ((in[11] - in[10]) >> (19 - 4)) |
		((in[12] - in[11]) << 4) |
		((in[13] - in[12]) << 23)

	out[8] = ((in[13] - in[12]) >> (19 - 10)) |
		((in[14] - in[13]) << 10) |
		((in[15] - in[14]) << 29)

	out[9] = ((in[15] - in[14]) >> (19 - 16)) |
		((in[16] - in[15]) << 16)

	out[10] = ((in[16] - in[15]) >> (19 - 3)) |
		((in[17] - in[16]) << 3) |
		((in[18] - in[17]) << 22)

	out[11] = ((in[18] - in[17]) >> (19 - 9)) |
		((in[19] - in[18]) << 9) |
		((in[20] - in[19]) << 28)

	out[12] = ((in[20] - in[19]) >> (19 - 15)) |
		((in[21] - in[20]) << 15)

	out[13] = ((in[21] - in[20]) >> (19 - 2)) |
		((in[22] - in[21]) << 2) |
		((in[23] - in[22]) << 21)

	out[14] = ((in[23] - in[22]) >> (19 - 8)) |
		((in[24] - in[23]) << 8) |
		((in[25] - in[24]) << 27)

	out[15] = ((in[25] - in[24]) >> (19 - 14)) |
		((in[26] - in[25]) << 14)

	out[16] = ((in[26] - in[25]) >> (19 - 1)) |
		((in[27] - in[26]) << 1) |
		((in[28] - in[27]) << 20)

	out[17] = ((in[28] - in[27]) >> (19 - 7)) |
		((in[29] - in[28]) << 7) |
		((in[30] - in[29]) << 26)

	out[18] = ((in[30] - in[29]) >> (19 - 13)) |
		((in[31] - in[30]) << 13)
}

func deltaPack20(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 20)

	out[1] = ((in[1] - in[0]) >> (20 - 8)) |
		((in[2] - in[1]) << 8) |
		((in[3] - in[2]) << 28)

	out[2] = ((in[3] - in[2]) >> (20 - 16)) |
		((in[4] - in[3]) << 16)

	out[3] = ((in[4] - in[3]) >> (20 - 4)) |
		((in[5] - in[4]) << 4) |
		((in[6] - in[5]) << 24)

	out[4] = ((in[6] - in[5]) >> (20 - 12)) |
		((in[7] - in[6]) << 12)

	out[5] = (in[8] - in[7]) |
		((in[9] - in[8]) << 20)

	out[6] = ((in[9] - in[8]) >> (20 - 8)) |
		((in[10] - in[9]) << 8) |
		((in[11] - in[10]) << 28)

	out[7] = ((in[11] - in[10]) >> (20 - 16)) |
		((in[12] - in[11]) << 16)

	out[8] = ((in[12] - in[11]) >> (20 - 4)) |
		((in[13] - in[12]) << 4) |
		((in[14] - in[13]) << 24)

	out[9] = ((in[14] - in[13]) >> (20 - 12)) |
		((in[15] - in[14]) << 12)

	out[10] = (in[16] - in[15]) |
		((in[17] - in[16]) << 20)

	out[11] = ((in[17] - in[16]) >> (20 - 8)) |
		((in[18] - in[17]) << 8) |
		((in[19] - in[18]) << 28)

	out[12] = ((in[19] - in[18]) >> (20 - 16)) |
		((in[20] - in[19]) << 16)

	out[13] = ((in[20] - in[19]) >> (20 - 4)) |
		((in[21] - in[20]) << 4) |
		((in[22] - in[21]) << 24)

	out[14] = ((in[22] - in[21]) >> (20 - 12)) |
		((in[23] - in[22]) << 12)

	out[15] = (in[24] - in[23]) |
		((in[25] - in[24]) << 20)

	out[16] = ((in[25] - in[24]) >> (20 - 8)) |
		((in[26] - in[25]) << 8) |
		((in[27] - in[26]) << 28)

	out[17] = ((in[27] - in[26]) >> (20 - 16)) |
		((in[28] - in[27]) << 16)

	out[18] = ((in[28] - in[27]) >> (20 - 4)) |
		((in[29] - in[28]) << 4) |
		((in[30] - in[29]) << 24)

	out[19] = ((in[30] - in[29]) >> (20 - 12)) |
		((in[31] - in[30]) << 12)
}

func deltaPack21(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 21)

	out[1] = ((in[1] - in[0]) >> (21 - 10)) |
		((in[2] - in[1]) << 10) |
		((in[3] - in[2]) << 31)

	out[2] = ((in[3] - in[2]) >> (21 - 20)) |
		((in[4] - in[3]) << 20)

	out[3] = ((in[4] - in[3]) >> (21 - 9)) |
		((in[5] - in[4]) << 9) |
		((in[6] - in[5]) << 30)

	out[4] = ((in[6] - in[5]) >> (21 - 19)) |
		((in[7] - in[6]) << 19)

	out[5] = ((in[7] - in[6]) >> (21 - 8)) |
		((in[8] - in[7]) << 8) |
		((in[9] - in[8]) << 29)

	out[6] = ((in[9] - in[8]) >> (21 - 18)) |
		((in[10] - in[9]) << 18)

	out[7] = ((in[10] - in[9]) >> (21 - 7)) |
		((in[11] - in[10]) << 7) |
		((in[12] - in[11]) << 28)

	out[8] = ((in[12] - in[11]) >> (21 - 17)) |
		((in[13] - in[12]) << 17)

	out[9] = ((in[13] - in[12]) >> (21 - 6)) |
		((in[14] - in[13]) << 6) |
		((in[15] - in[14]) << 27)

	out[10] = ((in[15] - in[14]) >> (21 - 16)) |
		((in[16] - in[15]) << 16)

	out[11] = ((in[16] - in[15]) >> (21 - 5)) |
		((in[17] - in[16]) << 5) |
		((in[18] - in[17]) << 26)

	out[12] = ((in[18] - in[17]) >> (21 - 15)) |
		((in[19] - in[18]) << 15)

	out[13] = ((in[19] - in[18]) >> (21 - 4)) |
		((in[20] - in[19]) << 4) |
		((in[21] - in[20]) << 25)

	out[14] = ((in[21] - in[20]) >> (21 - 14)) |
		((in[22] - in[21]) << 14)

	out[15] = ((in[22] - in[21]) >> (21 - 3)) |
		((in[23] - in[22]) << 3) |
		((in[24] - in[23]) << 24)

	out[16] = ((in[24] - in[23]) >> (21 - 13)) |
		((in[25] - in[24]) << 13)

	out[17] = ((in[25] - in[24]) >> (21 - 2)) |
		((in[26] - in[25]) << 2) |
		((in[27] - in[26]) << 23)

	out[18] = ((in[27] - in[26]) >> (21 - 12)) |
		((in[28] - in[27]) << 12)

	out[19] = ((in[28] - in[27]) >> (21 - 1)) |
		((in[29] - in[28]) << 1) |
		((in[30] - in[29]) << 22)

	out[20] = ((in[30] - in[29]) >> (21 - 11)) |
		((in[31] - in[30]) << 11)
}

func deltaPack22(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 22)

	out[1] = ((in[1] - in[0]) >> (22 - 12)) |
		((in[2] - in[1]) << 12)

	out[2] = ((in[2] - in[1]) >> (22 - 2)) |
		((in[3] - in[2]) << 2) |
		((in[4] - in[3]) << 24)

	out[3] = ((in[4] - in[3]) >> (22 - 14)) |
		((in[5] - in[4]) << 14)

	out[4] = ((in[5] - in[4]) >> (22 - 4)) |
		((in[6] - in[5]) << 4) |
		((in[7] - in[6]) << 26)

	out[5] = ((in[7] - in[6]) >> (22 - 16)) |
		((in[8] - in[7]) << 16)

	out[6] = ((in[8] - in[7]) >> (22 - 6)) |
		((in[9] - in[8]) << 6) |
		((in[10] - in[9]) << 28)

	out[7] = ((in[10] - in[9]) >> (22 - 18)) |
		((in[11] - in[10]) << 18)

	out[8] = ((in[11] - in[10]) >> (22 - 8)) |
		((in[12] - in[11]) << 8) |
		((in[13] - in[12]) << 30)

	out[9] = ((in[13] - in[12]) >> (22 - 20)) |
		((in[14] - in[13]) << 20)

	out[10] = ((in[14] - in[13]) >> (22 - 10)) |
		((in[15] - in[14]) << 10)

	out[11] = (in[16] - in[15]) |
		((in[17] - in[16]) << 22)

	out[12] = ((in[17] - in[16]) >> (22 - 12)) |
		((in[18] - in[17]) << 12)

	out[13] = ((in[18] - in[17]) >> (22 - 2)) |
		((in[19] - in[18]) << 2) |
		((in[20] - in[19]) << 24)

	out[14] = ((in[20] - in[19]) >> (22 - 14)) |
		((in[21] - in[20]) << 14)

	out[15] = ((in[21] - in[20]) >> (22 - 4)) |
		((in[22] - in[21]) << 4) |
		((in[23] - in[22]) << 26)

	out[16] = ((in[23] - in[22]) >> (22 - 16)) |
		((in[24] - in[23]) << 16)

	out[17] = ((in[24] - in[23]) >> (22 - 6)) |
		((in[25] - in[24]) << 6) |
		((in[26] - in[25]) << 28)

	out[18] = ((in[26] - in[25]) >> (22 - 18)) |
		((in[27] - in[26]) << 18)

	out[19] = ((in[27] - in[26]) >> (22 - 8)) |
		((in[28] - in[27]) << 8) |
		((in[29] - in[28]) << 30)

	out[20] = ((in[29] - in[28]) >> (22 - 20)) |
		((in[30] - in[29]) << 20)

	out[21] = ((in[30] - in[29]) >> (22 - 10)) |
		((in[31] - in[30]) << 10)
}

func deltaPack23(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 23)

	out[1] = ((in[1] - in[0]) >> (23 - 14)) |
		((in[2] - in[1]) << 14)

	out[2] = ((in[2] - in[1]) >> (23 - 5)) |
		((in[3] - in[2]) << 5) |
		((in[4] - in[3]) << 28)

	out[3] = ((in[4] - in[3]) >> (23 - 19)) |
		((in[5] - in[4]) << 19)

	out[4] = ((in[5] - in[4]) >> (23 - 10)) |
		((in[6] - in[5]) << 10)

	out[5] = ((in[6] - in[5]) >> (23 - 1)) |
		((in[7] - in[6]) << 1) |
		((in[8] - in[7]) << 24)

	out[6] = ((in[8] - in[7]) >> (23 - 15)) |
		((in[9] - in[8]) << 15)

	out[7] = ((in[9] - in[8]) >> (23 - 6)) |
		((in[10] - in[9]) << 6) |
		((in[11] - in[10]) << 29)

	out[8] = ((in[11] - in[10]) >> (23 - 20)) |
		((in[12] - in[11]) << 20)

	out[9] = ((in[12] - in[11]) >> (23 - 11)) |
		((in[13] - in[12]) << 11)

	out[10] = ((in[13] - in[12]) >> (23 - 2)) |
		((in[14] - in[13]) << 2) |
		((in[15] - in[14]) << 25)

	out[11] = ((in[15] - in[14]) >> (23 - 16)) |
		((in[16] - in[15]) << 16)

	out[12] = ((in[16] - in[15]) >> (23 - 7)) |
		((in[17] - in[16]) << 7) |
		((in[18] - in[17]) << 30)

	out[13] = ((in[18] - in[17]) >> (23 - 21)) |
		((in[19] - in[18]) << 21)

	out[14] = ((in[19] - in[18]) >> (23 - 12)) |
		((in[20] - in[19]) << 12)

	out[15] = ((in[20] - in[19]) >> (23 - 3)) |
		((in[21] - in[20]) << 3) |
		((in[22] - in[21]) << 26)

	out[16] = ((in[22] - in[21]) >> (23 - 17)) |
		((in[23] - in[22]) << 17)

	out[17] = ((in[23] - in[22]) >> (23 - 8)) |
		((in[24] - in[23]) << 8) |
		((in[25] - in[24]) << 31)

	out[18] = ((in[25] - in[24]) >> (23 - 22)) |
		((in[26] - in[25]) << 22)

	out[19] = ((in[26] - in[25]) >> (23 - 13)) |
		((in[27] - in[26]) << 13)

	out[20] = ((in[27] - in[26]) >> (23 - 4)) |
		((in[28] - in[27]) << 4) |
		((in[29] - in[28]) << 27)

	out[21] = ((in[29] - in[28]) >> (23 - 18)) |
		((in[30] - in[29]) << 18)

	out[22] = ((in[30] - in[29]) >> (23 - 9)) |
		((in[31] - in[30]) << 9)
}

func deltaPack24(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 24)

	out[1] = ((in[1] - in[0]) >> (24 - 16)) |
		((in[2] - in[1]) << 16)

	out[2] = ((in[2] - in[1]) >> (24 - 8)) |
		((in[3] - in[2]) << 8)

	out[3] = (in[4] - in[3]) |
		((in[5] - in[4]) << 24)

	out[4] = ((in[5] - in[4]) >> (24 - 16)) |
		((in[6] - in[5]) << 16)

	out[5] = ((in[6] - in[5]) >> (24 - 8)) |
		((in[7] - in[6]) << 8)

	out[6] = (in[8] - in[7]) |
		((in[9] - in[8]) << 24)

	out[7] = ((in[9] - in[8]) >> (24 - 16)) |
		((in[10] - in[9]) << 16)

	out[8] = ((in[10] - in[9]) >> (24 - 8)) |
		((in[11] - in[10]) << 8)

	out[9] = (in[12] - in[11]) |
		((in[13] - in[12]) << 24)

	out[10] = ((in[13] - in[12]) >> (24 - 16)) |
		((in[14] - in[13]) << 16)

	out[11] = ((in[14] - in[13]) >> (24 - 8)) |
		((in[15] - in[14]) << 8)

	out[12] = (in[16] - in[15]) |
		((in[17] - in[16]) << 24)

	out[13] = ((in[17] - in[16]) >> (24 - 16)) |
		((in[18] - in[17]) << 16)

	out[14] = ((in[18] - in[17]) >> (24 - 8)) |
		((in[19] - in[18]) << 8)

	out[15] = (in[20] - in[19]) |
		((in[21] - in[20]) << 24)

	out[16] = ((in[21] - in[20]) >> (24 - 16)) |
		((in[22] - in[21]) << 16)

	out[17] = ((in[22] - in[21]) >> (24 - 8)) |
		((in[23] - in[22]) << 8)

	out[18] = (in[24] - in[23]) |
		((in[25] - in[24]) << 24)

	out[19] = ((in[25] - in[24]) >> (24 - 16)) |
		((in[26] - in[25]) << 16)

	out[20] = ((in[26] - in[25]) >> (24 - 8)) |
		((in[27] - in[26]) << 8)

	out[21] = (in[28] - in[27]) |
		((in[29] - in[28]) << 24)

	out[22] = ((in[29] - in[28]) >> (24 - 16)) |
		((in[30] - in[29]) << 16)

	out[23] = ((in[30] - in[29]) >> (24 - 8)) |
		((in[31] - in[30]) << 8)
}

func deltaPack25(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 25)

	out[1] = ((in[1] - in[0]) >> (25 - 18)) |
		((in[2] - in[1]) << 18)

	out[2] = ((in[2] - in[1]) >> (25 - 11)) |
		((in[3] - in[2]) << 11)

	out[3] = ((in[3] - in[2]) >> (25 - 4)) |
		((in[4] - in[3]) << 4) |
		((in[5] - in[4]) << 29)

	out[4] = ((in[5] - in[4]) >> (25 - 22)) |
		((in[6] - in[5]) << 22)

	out[5] = ((in[6] - in[5]) >> (25 - 15)) |
		((in[7] - in[6]) << 15)

	out[6] = ((in[7] - in[6]) >> (25 - 8)) |
		((in[8] - in[7]) << 8)

	out[7] = ((in[8] - in[7]) >> (25 - 1)) |
		((in[9] - in[8]) << 1) |
		((in[10] - in[9]) << 26)

	out[8] = ((in[10] - in[9]) >> (25 - 19)) |
		((in[11] - in[10]) << 19)

	out[9] = ((in[11] - in[10]) >> (25 - 12)) |
		((in[12] - in[11]) << 12)

	out[10] = ((in[12] - in[11]) >> (25 - 5)) |
		((in[13] - in[12]) << 5) |
		((in[14] - in[13]) << 30)

	out[11] = ((in[14] - in[13]) >> (25 - 23)) |
		((in[15] - in[14]) << 23)

	out[12] = ((in[15] - in[14]) >> (25 - 16)) |
		((in[16] - in[15]) << 16)

	out[13] = ((in[16] - in[15]) >> (25 - 9)) |
		((in[17] - in[16]) << 9)

	out[14] = ((in[17] - in[16]) >> (25 - 2)) |
		((in[18] - in[17]) << 2) |
		((in[19] - in[18]) << 27)

	out[15] = ((in[19] - in[18]) >> (25 - 20)) |
		((in[20] - in[19]) << 20)

	out[16] = ((in[20] - in[19]) >> (25 - 13)) |
		((in[21] - in[20]) << 13)

	out[17] = ((in[21] - in[20]) >> (25 - 6)) |
		((in[22] - in[21]) << 6) |
		((in[23] - in[22]) << 31)

	out[18] = ((in[23] - in[22]) >> (25 - 24)) |
		((in[24] - in[23]) << 24)

	out[19] = ((in[24] - in[23]) >> (25 - 17)) |
		((in[25] - in[24]) << 17)

	out[20] = ((in[25] - in[24]) >> (25 - 10)) |
		((in[26] - in[25]) << 10)

	out[21] = ((in[26] - in[25]) >> (25 - 3)) |
		((in[27] - in[26]) << 3) |
		((in[28] - in[27]) << 28)

	out[22] = ((in[28] - in[27]) >> (25 - 21)) |
		((in[29] - in[28]) << 21)

	out[23] = ((in[29] - in[28]) >> (25 - 14)) |
		((in[30] - in[29]) << 14)

	out[24] = ((in[30] - in[29]) >> (25 - 7)) |
		((in[31] - in[30]) << 7)
}

func deltaPack26(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 26)

	out[1] = ((in[1] - in[0]) >> (26 - 20)) |
		((in[2] - in[1]) << 20)

	out[2] = ((in[2] - in[1]) >> (26 - 14)) |
		((in[3] - in[2]) << 14)

	out[3] = ((in[3] - in[2]) >> (26 - 8)) |
		((in[4] - in[3]) << 8)

	out[4] = ((in[4] - in[3]) >> (26 - 2)) |
		((in[5] - in[4]) << 2) |
		((in[6] - in[5]) << 28)

	out[5] = ((in[6] - in[5]) >> (26 - 22)) |
		((in[7] - in[6]) << 22)

	out[6] = ((in[7] - in[6]) >> (26 - 16)) |
		((in[8] - in[7]) << 16)

	out[7] = ((in[8] - in[7]) >> (26 - 10)) |
		((in[9] - in[8]) << 10)

	out[8] = ((in[9] - in[8]) >> (26 - 4)) |
		((in[10] - in[9]) << 4) |
		((in[11] - in[10]) << 30)

	out[9] = ((in[11] - in[10]) >> (26 - 24)) |
		((in[12] - in[11]) << 24)

	out[10] = ((in[12] - in[11]) >> (26 - 18)) |
		((in[13] - in[12]) << 18)

	out[11] = ((in[13] - in[12]) >> (26 - 12)) |
		((in[14] - in[13]) << 12)

	out[12] = ((in[14] - in[13]) >> (26 - 6)) |
		((in[15] - in[14]) << 6)

	out[13] = (in[16] - in[15]) |
		((in[17] - in[16]) << 26)

	out[14] = ((in[17] - in[16]) >> (26 - 20)) |
		((in[18] - in[17]) << 20)

	out[15] = ((in[18] - in[17]) >> (26 - 14)) |
		((in[19] - in[18]) << 14)

	out[16] = ((in[19] - in[18]) >> (26 - 8)) |
		((in[20] - in[19]) << 8)

	out[17] = ((in[20] - in[19]) >> (26 - 2)) |
		((in[21] - in[20]) << 2) |
		((in[22] - in[21]) << 28)

	out[18] = ((in[22] - in[21]) >> (26 - 22)) |
		((in[23] - in[22]) << 22)

	out[19] = ((in[23] - in[22]) >> (26 - 16)) |
		((in[24] - in[23]) << 16)

	out[20] = ((in[24] - in[23]) >> (26 - 10)) |
		((in[25] - in[24]) << 10)

	out[21] = ((in[25] - in[24]) >> (26 - 4)) |
		((in[26] - in[25]) << 4) |
		((in[27] - in[26]) << 30)

	out[22] = ((in[27] - in[26]) >> (26 - 24)) |
		((in[28] - in[27]) << 24)

	out[23] = ((in[28] - in[27]) >> (26 - 18)) |
		((in[29] - in[28]) << 18)

	out[24] = ((in[29] - in[28]) >> (26 - 12)) |
		((in[30] - in[29]) << 12)

	out[25] = ((in[30] - in[29]) >> (26 - 6)) |
		((in[31] - in[30]) << 6)
}

func deltaPack27(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 27)

	out[1] = ((in[1] - in[0]) >> (27 - 22)) |
		((in[2] - in[1]) << 22)

	out[2] = ((in[2] - in[1]) >> (27 - 17)) |
		((in[3] - in[2]) << 17)

	out[3] = ((in[3] - in[2]) >> (27 - 12)) |
		((in[4] - in[3]) << 12)

	out[4] = ((in[4] - in[3]) >> (27 - 7)) |
		((in[5] - in[4]) << 7)

	out[5] = ((in[5] - in[4]) >> (27 - 2)) |
		((in[6] - in[5]) << 2) |
		((in[7] - in[6]) << 29)

	out[6] = ((in[7] - in[6]) >> (27 - 24)) |
		((in[8] - in[7]) << 24)

	out[7] = ((in[8] - in[7]) >> (27 - 19)) |
		((in[9] - in[8]) << 19)

	out[8] = ((in[9] - in[8]) >> (27 - 14)) |
		((in[10] - in[9]) << 14)

	out[9] = ((in[10] - in[9]) >> (27 - 9)) |
		((in[11] - in[10]) << 9)

	out[10] = ((in[11] - in[10]) >> (27 - 4)) |
		((in[12] - in[11]) << 4) |
		((in[13] - in[12]) << 31)

	out[11] = ((in[13] - in[12]) >> (27 - 26)) |
		((in[14] - in[13]) << 26)

	out[12] = ((in[14] - in[13]) >> (27 - 21)) |
		((in[15] - in[14]) << 21)

	out[13] = ((in[15] - in[14]) >> (27 - 16)) |
		((in[16] - in[15]) << 16)

	out[14] = ((in[16] - in[15]) >> (27 - 11)) |
		((in[17] - in[16]) << 11)

	out[15] = ((in[17] - in[16]) >> (27 - 6)) |
		((in[18] - in[17]) << 6)

	out[16] = ((in[18] - in[17]) >> (27 - 1)) |
		((in[19] - in[18]) << 1) |
		((in[20] - in[19]) << 28)

	out[17] = ((in[20] - in[19]) >> (27 - 23)) |
		((in[21] - in[20]) << 23)

	out[18] = ((in[21] - in[20]) >> (27 - 18)) |
		((in[22] - in[21]) << 18)

	out[19] = ((in[22] - in[21]) >> (27 - 13)) |
		((in[23] - in[22]) << 13)

	out[20] = ((in[23] - in[22]) >> (27 - 8)) |
		((in[24] - in[23]) << 8)

	out[21] = ((in[24] - in[23]) >> (27 - 3)) |
		((in[25] - in[24]) << 3) |
		((in[26] - in[25]) << 30)

	out[22] = ((in[26] - in[25]) >> (27 - 25)) |
		((in[27] - in[26]) << 25)

	out[23] = ((in[27] - in[26]) >> (27 - 20)) |
		((in[28] - in[27]) << 20)

	out[24] = ((in[28] - in[27]) >> (27 - 15)) |
		((in[29] - in[28]) << 15)

	out[25] = ((in[29] - in[28]) >> (27 - 10)) |
		((in[30] - in[29]) << 10)

	out[26] = ((in[30] - in[29]) >> (27 - 5)) |
		((in[31] - in[30]) << 5)
}

func deltaPack28(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 28)

	out[1] = ((in[1] - in[0]) >> (28 - 24)) |
		((in[2] - in[1]) << 24)

	out[2] = ((in[2] - in[1]) >> (28 - 20)) |
		((in[3] - in[2]) << 20)

	out[3] = ((in[3] - in[2]) >> (28 - 16)) |
		((in[4] - in[3]) << 16)

	out[4] = ((in[4] - in[3]) >> (28 - 12)) |
		((in[5] - in[4]) << 12)

	out[5] = ((in[5] - in[4]) >> (28 - 8)) |
		((in[6] - in[5]) << 8)

	out[6] = ((in[6] - in[5]) >> (28 - 4)) |
		((in[7] - in[6]) << 4)

	out[7] = (in[8] - in[7]) |
		((in[9] - in[8]) << 28)

	out[8] = ((in[9] - in[8]) >> (28 - 24)) |
		((in[10] - in[9]) << 24)

	out[9] = ((in[10] - in[9]) >> (28 - 20)) |
		((in[11] - in[10]) << 20)

	out[10] = ((in[11] - in[10]) >> (28 - 16)) |
		((in[12] - in[11]) << 16)

	out[11] = ((in[12] - in[11]) >> (28 - 12)) |
		((in[13] - in[12]) << 12)

	out[12] = ((in[13] - in[12]) >> (28 - 8)) |
		((in[14] - in[13]) << 8)

	out[13] = ((in[14] - in[13]) >> (28 - 4)) |
		((in[15] - in[14]) << 4)

	out[14] = (in[16] - in[15]) |
		((in[17] - in[16]) << 28)

	out[15] = ((in[17] - in[16]) >> (28 - 24)) |
		((in[18] - in[17]) << 24)

	out[16] = ((in[18] - in[17]) >> (28 - 20)) |
		((in[19] - in[18]) << 20)

	out[17] = ((in[19] - in[18]) >> (28 - 16)) |
		((in[20] - in[19]) << 16)

	out[18] = ((in[20] - in[19]) >> (28 - 12)) |
		((in[21] - in[20]) << 12)

	out[19] = ((in[21] - in[20]) >> (28 - 8)) |
		((in[22] - in[21]) << 8)

	out[20] = ((in[22] - in[21]) >> (28 - 4)) |
		((in[23] - in[22]) << 4)

	out[21] = (in[24] - in[23]) |
		((in[25] - in[24]) << 28)

	out[22] = ((in[25] - in[24]) >> (28 - 24)) |
		((in[26] - in[25]) << 24)

	out[23] = ((in[26] - in[25]) >> (28 - 20)) |
		((in[27] - in[26]) << 20)

	out[24] = ((in[27] - in[26]) >> (28 - 16)) |
		((in[28] - in[27]) << 16)

	out[25] = ((in[28] - in[27]) >> (28 - 12)) |
		((in[29] - in[28]) << 12)

	out[26] = ((in[29] - in[28]) >> (28 - 8)) |
		((in[30] - in[29]) << 8)

	out[27] = ((in[30] - in[29]) >> (28 - 4)) |
		((in[31] - in[30]) << 4)
}

func deltaPack29(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 29)

	out[1] = ((in[1] - in[0]) >> (29 - 26)) |
		((in[2] - in[1]) << 26)

	out[2] = ((in[2] - in[1]) >> (29 - 23)) |
		((in[3] - in[2]) << 23)

	out[3] = ((in[3] - in[2]) >> (29 - 20)) |
		((in[4] - in[3]) << 20)

	out[4] = ((in[4] - in[3]) >> (29 - 17)) |
		((in[5] - in[4]) << 17)

	out[5] = ((in[5] - in[4]) >> (29 - 14)) |
		((in[6] - in[5]) << 14)

	out[6] = ((in[6] - in[5]) >> (29 - 11)) |
		((in[7] - in[6]) << 11)

	out[7] = ((in[7] - in[6]) >> (29 - 8)) |
		((in[8] - in[7]) << 8)

	out[8] = ((in[8] - in[7]) >> (29 - 5)) |
		((in[9] - in[8]) << 5)

	out[9] = ((in[9] - in[8]) >> (29 - 2)) |
		((in[10] - in[9]) << 2) |
		((in[11] - in[10]) << 31)

	out[10] = ((in[11] - in[10]) >> (29 - 28)) |
		((in[12] - in[11]) << 28)

	out[11] = ((in[12] - in[11]) >> (29 - 25)) |
		((in[13] - in[12]) << 25)

	out[12] = ((in[13] - in[12]) >> (29 - 22)) |
		((in[14] - in[13]) << 22)

	out[13] = ((in[14] - in[13]) >> (29 - 19)) |
		((in[15] - in[14]) << 19)

	out[14] = ((in[15] - in[14]) >> (29 - 16)) |
		((in[16] - in[15]) << 16)

	out[15] = ((in[16] - in[15]) >> (29 - 13)) |
		((in[17] - in[16]) << 13)

	out[16] = ((in[17] - in[16]) >> (29 - 10)) |
		((in[18] - in[17]) << 10)

	out[17] = ((in[18] - in[17]) >> (29 - 7)) |
		((in[19] - in[18]) << 7)

	out[18] = ((in[19] - in[18]) >> (29 - 4)) |
		((in[20] - in[19]) << 4)

	out[19] = ((in[20] - in[19]) >> (29 - 1)) |
		((in[21] - in[20]) << 1) |
		((in[22] - in[21]) << 30)

	out[20] = ((in[22] - in[21]) >> (29 - 27)) |
		((in[23] - in[22]) << 27)

	out[21] = ((in[23] - in[22]) >> (29 - 24)) |
		((in[24] - in[23]) << 24)

	out[22] = ((in[24] - in[23]) >> (29 - 21)) |
		((in[25] - in[24]) << 21)

	out[23] = ((in[25] - in[24]) >> (29 - 18)) |
		((in[26] - in[25]) << 18)

	out[24] = ((in[26] - in[25]) >> (29 - 15)) |
		((in[27] - in[26]) << 15)

	out[25] = ((in[27] - in[26]) >> (29 - 12)) |
		((in[28] - in[27]) << 12)

	out[26] = ((in[28] - in[27]) >> (29 - 9)) |
		((in[29] - in[28]) << 9)

	out[27] = ((in[29] - in[28]) >> (29 - 6)) |
		((in[30] - in[29]) << 6)

	out[28] = ((in[30] - in[29]) >> (29 - 3)) |
		((in[31] - in[30]) << 3)
}

func deltaPack30(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 30)

	out[1] = ((in[1] - in[0]) >> (30 - 28)) |
		((in[2] - in[1]) << 28)

	out[2] = ((in[2] - in[1]) >> (30 - 26)) |
		((in[3] - in[2]) << 26)

	out[3] = ((in[3] - in[2]) >> (30 - 24)) |
		((in[4] - in[3]) << 24)

	out[4] = ((in[4] - in[3]) >> (30 - 22)) |
		((in[5] - in[4]) << 22)

	out[5] = ((in[5] - in[4]) >> (30 - 20)) |
		((in[6] - in[5]) << 20)

	out[6] = ((in[6] - in[5]) >> (30 - 18)) |
		((in[7] - in[6]) << 18)

	out[7] = ((in[7] - in[6]) >> (30 - 16)) |
		((in[8] - in[7]) << 16)

	out[8] = ((in[8] - in[7]) >> (30 - 14)) |
		((in[9] - in[8]) << 14)

	out[9] = ((in[9] - in[8]) >> (30 - 12)) |
		((in[10] - in[9]) << 12)

	out[10] = ((in[10] - in[9]) >> (30 - 10)) |
		((in[11] - in[10]) << 10)

	out[11] = ((in[11] - in[10]) >> (30 - 8)) |
		((in[12] - in[11]) << 8)

	out[12] = ((in[12] - in[11]) >> (30 - 6)) |
		((in[13] - in[12]) << 6)

	out[13] = ((in[13] - in[12]) >> (30 - 4)) |
		((in[14] - in[13]) << 4)

	out[14] = ((in[14] - in[13]) >> (30 - 2)) |
		((in[15] - in[14]) << 2)

	out[15] = (in[16] - in[15]) |
		((in[17] - in[16]) << 30)

	out[16] = ((in[17] - in[16]) >> (30 - 28)) |
		((in[18] - in[17]) << 28)

	out[17] = ((in[18] - in[17]) >> (30 - 26)) |
		((in[19] - in[18]) << 26)

	out[18] = ((in[19] - in[18]) >> (30 - 24)) |
		((in[20] - in[19]) << 24)

	out[19] = ((in[20] - in[19]) >> (30 - 22)) |
		((in[21] - in[20]) << 22)

	out[20] = ((in[21] - in[20]) >> (30 - 20)) |
		((in[22] - in[21]) << 20)

	out[21] = ((in[22] - in[21]) >> (30 - 18)) |
		((in[23] - in[22]) << 18)

	out[22] = ((in[23] - in[22]) >> (30 - 16)) |
		((in[24] - in[23]) << 16)

	out[23] = ((in[24] - in[23]) >> (30 - 14)) |
		((in[25] - in[24]) << 14)

	out[24] = ((in[25] - in[24]) >> (30 - 12)) |
		((in[26] - in[25]) << 12)

	out[25] = ((in[26] - in[25]) >> (30 - 10)) |
		((in[27] - in[26]) << 10)

	out[26] = ((in[27] - in[26]) >> (30 - 8)) |
		((in[28] - in[27]) << 8)

	out[27] = ((in[28] - in[27]) >> (30 - 6)) |
		((in[29] - in[28]) << 6)

	out[28] = ((in[29] - in[28]) >> (30 - 4)) |
		((in[30] - in[29]) << 4)

	out[29] = ((in[30] - in[29]) >> (30 - 2)) |
		((in[31] - in[30]) << 2)
}

func deltaPack31(offset uint32, in []uint32, out []uint32) {

	out[0] = (in[0] - offset) |
		((in[1] - in[0]) << 31)

	out[1] = ((in[1] - in[0]) >> (31 - 30)) |
		((in[2] - in[1]) << 30)

	out[2] = ((in[2] - in[1]) >> (31 - 29)) |
		((in[3] - in[2]) << 29)

	out[3] = ((in[3] - in[2]) >> (31 - 28)) |
		((in[4] - in[3]) << 28)

	out[4] = ((in[4] - in[3]) >> (31 - 27)) |
		((in[5] - in[4]) << 27)

	out[5] = ((in[5] - in[4]) >> (31 - 26)) |
		((in[6] - in[5]) << 26)

	out[6] = ((in[6] - in[5]) >> (31 - 25)) |
		((in[7] - in[6]) << 25)

	out[7] = ((in[7] - in[6]) >> (31 - 24)) |
		((in[8] - in[7]) << 24)

	out[8] = ((in[8] - in[7]) >> (31 - 23)) |
		((in[9] - in[8]) << 23)

	out[9] = ((in[9] - in[8]) >> (31 - 22)) |
		((in[10] - in[9]) << 22)

	out[10] = ((in[10] - in[9]) >> (31 - 21)) |
		((in[11] - in[10]) << 21)

	out[11] = ((in[11] - in[10]) >> (31 - 20)) |
		((in[12] - in[11]) << 20)

	out[12] = ((in[12] - in[11]) >> (31 - 19)) |
		((in[13] - in[12]) << 19)

	out[13] = ((in[13] - in[12]) >> (31 - 18)) |
		((in[14] - in[13]) << 18)

	out[14] = ((in[14] - in[13]) >> (31 - 17)) |
		((in[15] - in[14]) << 17)

	out[15] = ((in[15] - in[14]) >> (31 - 16)) |
		((in[16] - in[15]) << 16)

	out[16] = ((in[16] - in[15]) >> (31 - 15)) |
		((in[17] - in[16]) << 15)

	out[17] = ((in[17] - in[16]) >> (31 - 14)) |
		((in[18] - in[17]) << 14)

	out[18] = ((in[18] - in[17]) >> (31 - 13)) |
		((in[19] - in[18]) << 13)

	out[19] = ((in[19] - in[18]) >> (31 - 12)) |
		((in[20] - in[19]) << 12)

	out[20] = ((in[20] - in[19]) >> (31 - 11)) |
		((in[21] - in[20]) << 11)

	out[21] = ((in[21] - in[20]) >> (31 - 10)) |
		((in[22] - in[21]) << 10)

	out[22] = ((in[22] - in[21]) >> (31 - 9)) |
		((in[23] - in[22]) << 9)

	out[23] = ((in[23] - in[22]) >> (31 - 8)) |
		((in[24] - in[23]) << 8)

	out[24] = ((in[24] - in[23]) >> (31 - 7)) |
		((in[25] - in[24]) << 7)

	out[25] = ((in[25] - in[24]) >> (31 - 6)) |
		((in[26] - in[25]) << 6)

	out[26] = ((in[26] - in[25]) >> (31 - 5)) |
		((in[27] - in[26]) << 5)

	out[27] = ((in[27] - in[26]) >> (31 - 4)) |
		((in[28] - in[27]) << 4)

	out[28] = ((in[28] - in[27]) >> (31 - 3)) |
		((in[29] - in[28]) << 3)

	out[29] = ((in[29] - in[28]) >> (31 - 2)) |
		((in[30] - in[29]) << 2)

	out[30] = ((in[30] - in[29]) >> (31 - 1)) |
		((in[31] - in[30]) << 1)
}

func deltaPack32(_ uint32, in []uint32, out []uint32) {
	copy(out[:32], in[:32])
}
